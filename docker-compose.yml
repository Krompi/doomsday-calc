version: "3.7"
networks:
    default:
        external:
            name: proxy
    intern: {}
volumes:
    app: {}
    db: {}
services:
    app:
        build:
            args:
                - user=www-run
                - uid=1000
                - http_proxy            # kommt aus der .env
                - https_proxy           # kommt aus der .env
                - no_proxy              # kommt aus der .env
            context: ./
            dockerfile: Dockerfile
        environment:
            - http_proxy
            - https_proxy
            - no_proxy
        image: ${docker_image}          # kommt aus der .env
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - source: app
              target: /var/www
              type: volume
        networks:
            default: {}
            intern:
                aliases:
                    - app
        depends_on:
            - mysql

    mysql:
        image: mysql:5.7
        restart: unless-stopped
        environment:
            - SERVICE_TAGS=dev
            - SERVICE_NAME=mysql
            - MYSQL_DATABASE
            - MYSQL_USERNAME
            - MYSQL_PASSWORD
            - MYSQL_ROOT_PASSWORD
        volumes:
            - ./db/mysql:/docker-entrypoint-initdb.d
            - db:/var/lib/mysql
        networks:
            default: {}
            intern:
                aliases:
                    - mysql

    www:
        image: nginx:alpine
        restart: unless-stopped
        volumes:
            - source: app
              target: /var/www
              type: volume
            - source: ./conf/nginx
              target: /etc/nginx/conf.d/
              type: bind
        networks:
            default: {}
            intern:
                aliases:
                    - www
        labels:
            traefik.enable: "true"
            traefik.frontend.priority: "50"
            traefik.port: "80"
            traefik.frontend.rule: "HostRegexp: ${docker_project}.{domain:.+}"
            traefik.docker.network: "proxy"
        depends_on:
            - app